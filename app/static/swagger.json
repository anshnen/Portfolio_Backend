{
  "openapi": "3.0.0",
  "info": {
    "title": "Portfolio Management API",
    "description": "A comprehensive REST API for managing a financial portfolio, including accounts, holdings, transactions, and watchlists.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Portfolio",
      "description": "Endpoints for retrieving portfolio-level data and summaries."
    },
    {
      "name": "Transactions",
      "description": "Endpoints for creating and viewing transactions."
    },
    {
      "name": "Watchlists",
      "description": "Endpoints for managing watchlists and their items."
    },
    {
      "name": "Market Data",
      "description": "Internal endpoints for data management."
    }
  ],
  "paths": {
    "/portfolio/{portfolio_id}/summary": {
      "get": {
        "tags": ["Portfolio"],
        "summary": "Get Portfolio Summary",
        "description": "Retrieves a full summary of a portfolio, including net worth, cash flow, and a breakdown of accounts and holdings. This is the main endpoint for the dashboard.",
        "parameters": [
          {
            "name": "portfolio_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response with the portfolio summary.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioSummary"
                }
              }
            }
          },
          "404": {
            "description": "Portfolio not found."
          }
        }
      }
    },
    "/portfolio/accounts": {
      "get": {
        "tags": ["Portfolio"],
        "summary": "Get All Accounts",
        "description": "Retrieves a list of all financial accounts in the portfolio.",
        "responses": {
          "200": {
            "description": "A list of accounts.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Add a Transaction",
        "description": "Adds a new financial transaction and updates relevant account balances and holdings.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTransaction"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction created successfully."
          },
          "400": {
            "description": "Invalid input or insufficient funds/shares."
          }
        }
      }
    },
    "/watchlists/{portfolio_id}": {
      "get": {
        "tags": ["Watchlists"],
        "summary": "Get All Watchlists for a Portfolio",
        "description": "Retrieves all watchlists and their items for a given portfolio.",
        "parameters": [
          {
            "name": "portfolio_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of watchlists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Watchlist"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/watchlists": {
      "post": {
        "tags": ["Watchlists"],
        "summary": "Create a New Watchlist",
        "description": "Creates a new, empty watchlist for a portfolio.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewWatchlist"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Watchlist created successfully."
          },
          "400": {
            "description": "Invalid input or watchlist name already exists."
          }
        }
      }
    },
    "/watchlists/{watchlist_id}/items": {
      "post": {
        "tags": ["Watchlists"],
        "summary": "Add Item to Watchlist",
        "description": "Adds a stock to a specific watchlist. If the stock is not in the database, it will be fetched from an external source and created.",
        "parameters": [
          {
            "name": "watchlist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewWatchlistItem"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item added successfully."
          },
          "400": {
            "description": "Invalid input or item already in watchlist."
          },
          "404": {
            "description": "Watchlist or Asset not found."
          }
        }
      }
    },
    "/watchlists/{watchlist_id}/items/{asset_id}": {
      "delete": {
        "tags": ["Watchlists"],
        "summary": "Remove Item from Watchlist",
        "description": "Removes a stock from a specific watchlist.",
        "parameters": [
          {
            "name": "watchlist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item removed successfully."
          },
          "404": {
            "description": "Watchlist or item not found."
          }
        }
      }
    },
    "/market-data/refresh": {
      "post": {
        "tags": ["Market Data"],
        "summary": "Refresh Market Data",
        "description": "Manually triggers a server-side process to update the market prices for all assets from the external data provider. Intended for development and administrative use.",
        "responses": {
          "200": {
            "description": "Market data refresh completed successfully."
          },
          "500": {
            "description": "An error occurred during the refresh process."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "account_type": { "type": "string", "enum": ["CASH", "INVESTMENT", "RETIREMENT"] },
          "institution": { "type": "string" },
          "balance": { "type": "number", "format": "float" }
        }
      },
      "NewTransaction": {
        "type": "object",
        "properties": {
          "account_id": { "type": "integer", "example": 1 },
          "transaction_type": { "type": "string", "enum": ["BUY", "SELL", "DEPOSIT", "WITHDRAWAL", "DIVIDEND", "INTEREST", "FEE"] },
          "total_amount": { "type": "number", "format": "float", "description": "Net cash effect. Negative for BUY, WITHDRAWAL, FEE.", "example": -2500.00 },
          "transaction_date": { "type": "string", "format": "date", "example": "2024-10-26" },
          "asset_ticker": { "type": "string", "description": "Required for BUY/SELL transactions.", "example": "AAPL" },
          "quantity": { "type": "number", "format": "float", "description": "Required for BUY/SELL transactions.", "example": 10 },
          "price_per_unit": { "type": "number", "format": "float", "description": "Required for BUY/SELL transactions.", "example": 250.00 },
          "description": { "type": "string", "example": "Initial investment" }
        },
        "required": ["account_id", "transaction_type", "total_amount", "transaction_date"]
      },
      "PortfolioSummary": {
        "type": "object",
        "properties": {
          "net_worth": { "type": "number", "format": "float" },
          "todays_change_amount": { "type": "number", "format": "float" },
          "todays_change_percent": { "type": "number", "format": "float" },
          "cash_flow": {
            "type": "object",
            "properties": {
              "income": { "type": "number", "format": "float" },
              "spending": { "type": "number", "format": "float" }
            }
          },
          "accounts": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Account" }
          }
        }
      },
      "WatchlistItem": {
        "type": "object",
        "properties": {
          "asset_id": { "type": "integer" },
          "ticker_symbol": { "type": "string" },
          "name": { "type": "string" },
          "last_price": { "type": "number", "format": "float" }
        }
      },
      "Watchlist": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "items": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/WatchlistItem" }
          }
        }
      },
      "NewWatchlist": {
        "type": "object",
        "properties": {
          "portfolio_id": { "type": "integer", "example": 1 },
          "name": { "type": "string", "example": "My Favorite Tech Stocks" }
        },
        "required": ["portfolio_id", "name"]
      },
      "NewWatchlistItem": {
        "type": "object",
        "properties": {
          "ticker": { "type": "string", "example": "GOOGL" }
        },
        "required": ["ticker"]
      }
    }
  }
}